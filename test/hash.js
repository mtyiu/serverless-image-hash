'use strict';
// tests for hash
// Generated by serverless-mocha-plugin

const mod         = require('../hash/handler.js');
const mochaPlugin = require('serverless-mocha-plugin');
const querystring = require('querystring');
const lambdaWrapper     = mochaPlugin.lambdaWrapper;
const assert      = mochaPlugin.chai.assert;

const liveFunction = {
  region: process.env.SERVERLESS_REGION,
  lambdaFunction: process.env.SERVERLESS_PROJECT + '-hash'
}
var wrapped;

describe('hash', () => {
  before(function (done) {
//  wrapped = lambdaWrapper.wrap(liveFunction); // Run the deployed lambda
    wrapped = lambdaWrapper.wrap(mod);

    done()
  });

  it('should return two identical hashes', (done) => {
    //runHandler(event, customContext, callback)
    const body = querystring.stringify({
      url1: 'https://mtyiu.github.io/serverless-image-hash/images/nasa.png',
      url2: 'https://mtyiu.github.io/serverless-image-hash/images/nasa.png'
    });
    wrapped.runHandler({ body: body }, {}, (err, response) => {
      try {
        assert.equal(response.hashes[0], response.hashes[1]);
        assert.equal(response.diff, 0);
        done();
      } catch(e) {
        done(e);
      }
    });
  });

  it('should return two different hashes', (done) => {
    //runHandler(event, customContext, callback)
    const body = querystring.stringify({
      url1: 'https://mtyiu.github.io/serverless-image-hash/images/nasa.png',
      url2: 'https://mtyiu.github.io/serverless-image-hash/images/img_fjords.jpg'
    });
    wrapped.runHandler({ body: body }, {}, (err, response) => {
      try {
        assert.notEqual(response.hashes[0], response.hashes[1]);
        assert.notEqual(response.diff, 0);
        done();
      } catch(e) {
        done(e);
      }
    });
  });

  it('should return two similar hashes (diff < 0.1)', (done) => {
    //runHandler(event, customContext, callback)
    const body = querystring.stringify({
      url1: 'https://mtyiu.github.io/serverless-image-hash/images/forest-high.jpg',
      url2: 'https://mtyiu.github.io/serverless-image-hash/images/forest-copyright.jpg'
    });
    wrapped.runHandler({ body: body }, {}, (err, response) => {
      try {
        assert.notEqual(response.hashes[0], response.hashes[1]);
        assert.isBelow(response.diff, 0.1);
        done();
      } catch(e) {
        done(e);
      }
    });
  });
});
